{"version":3,"file":"static/js/79.cc05bd55.chunk.js","mappings":"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","sources":["webpack://react-kabzda-1/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.jsx","components/Dialogs/DialogsContainer.jsx","components/common/FormsControls/FormsControls.jsx","utils/validators/validators.jsx","webpack://react-kabzda-1/./src/components/common/FormsControls/FormsControls.module.css?eb50"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__f6r3Z\",\"dialogsItems\":\"Dialogs_dialogsItems__-qsKi\",\"active\":\"Dialogs_active__nKXKm\",\"messages\":\"Dialogs_messages__rix5U\",\"message\":\"Dialogs_message__zOxUb\"};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst DialogItem = (props) => {\r\n\r\n  let path = '/dialogs/' + props.id;\r\n\r\n  return (\r\n    <div className={s.dialog + ' ' + s.active}>\r\n      <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n  return <div className={s.dialog}>{props.message}</div>\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport {required, maxLengthCreator} from '../../../utils/validators/validators';\r\nimport {Textarea} from '../../common/FormsControls/FormsControls';\r\n\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                    validate={[required, maxLength50]}\r\n                    placeholder=\"Enter your message\"\r\n                    name=\"newMessageBody\"\r\n                />\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({ form: \"dialog-add-message-form\" })(AddMessageForm)\r\n","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport { Navigate } from 'react-router-dom';\r\nimport AddMessageForm from './AddMessageForm/AddMessageForm';\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n  let state = props.dialogsPage;\r\n\r\n  let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id} />)\r\n  let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id} />)\r\n  //let newMessageBody = state.newMessageBody;\r\n\r\n  let addNewMessage = (values) => {\r\n    props.sendMessage(values.newMessageBody);\r\n  }\r\n\r\n  if (!props.isAuth) return <Navigate to={\"/login\"} />;\r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogsItems}>\r\n        {dialogsElements}\r\n      </div>\r\n      <div className={s.messages}>\r\n        <div>{messagesElements}</div>\r\n\r\n      </div>\r\n      <AddMessageForm onSubmit={addNewMessage} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport { Navigate } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to='/login' />;\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import Dialogs from './Dialogs';\r\nimport { sendMessageCreator } from '../../redux/dialogs-reducer';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (newMessageBody) => {\r\n      dispatch(sendMessageCreator(newMessageBody))\r\n    }\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs)","import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\";\r\nimport { Field } from 'redux-form';\r\n\r\n\r\n/* before refactoring\r\nconst FormControl = ({ input, meta, child, ...props }) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}*/\r\n// after refactoring\r\nconst FormControl = ({ input, meta: {touched, error}, children }) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const { input, meta, child, ...restProps } = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const { input, meta, child, ...restProps } = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => {\r\n    return (<div>\r\n        <Field placeholder={placeholder} name={name}\r\n            validate={validators}\r\n            component={component}\r\n            {...props}\r\n        /> {text}\r\n    </div>)\r\n}","export const required = value => {\r\n    if (value) return undefined;\r\n\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n\r\n    return undefined\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControls_formControl__lb66s\",\"error\":\"FormsControls_error__Gk6yp\",\"formSummaryError\":\"FormsControls_formSummaryError__+LhkT\"};"],"names":["props","path","id","className","s","to","name","message","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","isAuth","values","sendMessage","newMessageBody","mapStateToPropsForRedirect","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React","Dialogs","FormControl","input","meta","touched","error","children","hasError","styles","restProps","child","Input","createField","validators","text","value","maxLength","length"],"sourceRoot":""}