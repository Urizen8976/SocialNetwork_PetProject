{"version":3,"file":"static/js/815.af20a3a3.chunk.js","mappings":"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","sources":["webpack://react-kabzda-1/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://react-kabzda-1/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","webpack://react-kabzda-1/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/common/FormsControls/FormsControls.jsx","utils/validators/validators.jsx","webpack://react-kabzda-1/./src/components/common/FormsControls/FormsControls.module.css?eb50"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__HpvUK\",\"posts\":\"MyPosts_posts__+-0zT\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__+MWDA\"};","import React from \"react\";\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n\r\n    //console.log(props.message);\r\n\r\n    return (\r\n        <div className={s.item}>\r\n            <img src='https://img.freepik.com/free-psd/3d-illustration-person-with-sunglasses_23-2149436188.jpg'></img>\r\n            { props.message }\r\n            <div>\r\n                <span>like</span> { props.likesCount }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React/*, { memo }*/ from \"react\";\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { required, maxLengthCreator } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\n\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field name=\"newPostText\" component={Textarea} placeholder={\"Post message\"}\r\n                validate={[required, maxLength10]} />\r\n        </div>\r\n        <div>\r\n            <button>Add post</button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({ form: \"ProfileAddNewPostForm\" })(AddNewPostForm);\r\n\r\nconst MyPosts = React.memo(props => {\r\n    /*shouldComponentUpdate(nextProps, nextState) {\r\n        return nextProps != this.props || nextState != this.state;\r\n    }*/\r\n\r\n    console.log(\"RENDER YO\");\r\n    let postsElements = props.posts.map(p => <Post\r\n        message={p.message}\r\n        likesCount={p.likesCount}\r\n    />);\r\n\r\n    //let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost} />\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default MyPosts;","import { addPostActionCreator, updateNewPostTextActionCreator } from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__Ji8au\"};","import React, {useState, useEffect} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status] );\r\n\r\n    const activateEditMode = () => { \r\n        setEditMode(true) \r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { !editMode &&\r\n                <div>\r\n                    <span onDoubleClick={ activateEditMode }>{props.status || '-----'}</span>\r\n                </div>\r\n            }\r\n            { editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus={true} onBlur={ deactivateEditMode }\r\n                        value={status}/>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport s from './ProfileInfo.module.css';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\n\r\n/* Before refactoring\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {<div>\r\n                <img src='https://images.unsplash.com/photo-1585409677983-0f6c41ca9c3b?ixlib=rb-1.2.1&w=1080&fit=max&q=80&fm=jpg&crop=entropy&cs=tinysrgb' />\r\n            </div>}\r\n            <div className={s.descriptionBlock}>\r\n                <img src={props.profile.photos.large} />\r\n                <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}*/\r\n\r\n// After refactoring\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {<div>\r\n                <img src='https://images.unsplash.com/photo-1585409677983-0f6c41ca9c3b?ixlib=rb-1.2.1&w=1080&fit=max&q=80&fm=jpg&crop=entropy&cs=tinysrgb' />\r\n            </div>}\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large} />\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\nconst Profile = (props) => {\r\n    //console.log(\"profile\");\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} \r\n            status={props.status} updateStatus={props.updateStatus} />\r\n            <MyPostsContainer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { getUserProfile, getStatus, updateStatus } from '../../redux/profile-reducer';\r\nimport { useParams, useLocation, useNavigate } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\n\r\n\r\nfunction withRouter(Component) {\r\n\r\n    function ComponentWithRouterProp(props) {\r\n        let location = useLocation();\r\n        let navigate = useNavigate();\r\n        let params = useParams();\r\n        return (\r\n            <Component\r\n                {...props}\r\n                router={{ location, navigate, params }}\r\n            />\r\n        );\r\n    }\r\n\r\n    return ComponentWithRouterProp;\r\n}\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.router.params.userId;\r\n        if (!userId)\r\n            userId = this.props.authorizedUserId;\r\n        if (!userId) {\r\n            this.props.router.navigate('/login');\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                profile={this.props.profile}\r\n                status={this.props.status}\r\n                updateStatus={this.props.updateStatus}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n    withRouter\r\n    //withAuthRedirect\r\n)(ProfileContainer)","import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\";\r\nimport { Field } from 'redux-form';\r\n\r\n\r\n/* before refactoring\r\nconst FormControl = ({ input, meta, child, ...props }) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}*/\r\n// after refactoring\r\nconst FormControl = ({ input, meta: {touched, error}, children }) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const { input, meta, child, ...restProps } = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const { input, meta, child, ...restProps } = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => {\r\n    return (<div>\r\n        <Field placeholder={placeholder} name={name}\r\n            validate={validators}\r\n            component={component}\r\n            {...props}\r\n        /> {text}\r\n    </div>)\r\n}","export const required = value => {\r\n    if (value) return undefined;\r\n\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n\r\n    return undefined\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControls_formControl__lb66s\",\"error\":\"FormsControls_error__Gk6yp\",\"formSummaryError\":\"FormsControls_formSummaryError__+LhkT\"};"],"names":["props","className","s","src","message","likesCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","React","console","log","postsElements","posts","map","p","values","addPost","newPostText","connect","state","profilePage","dispatch","addPostActionCreator","MyPosts","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","profile","photos","large","Preloader","ProfileContainer","userId","this","router","params","authorizedUserId","navigate","getUserProfile","getStatus","compose","auth","isAuth","Component","location","useLocation","useNavigate","useParams","FormControl","input","meta","touched","error","children","hasError","styles","restProps","child","Input","createField","validators","text","maxLength","length"],"sourceRoot":""}